"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Author: Simon Gao
" Version: 0.1 
"
" Plugins_Included:
"
"     > minibufexpl.vim - http://www.vim.org/scripts/script.php?script_id=159
"       Makes it easy to get an overview of buffers:
"           info -> :e ~/.vim_runtime/plugin/minibufexpl.vim
"
"     > bufexplorer - http://www.vim.org/scripts/script.php?script_id=42
"       Makes it easy to switch between buffers:
"           info -> :help bufExplorer
"
"     > yankring.vim - http://www.vim.org/scripts/script.php?script_id=1234
"       Emacs's killring, useful when using the clipboard:
"           info -> :help yankring
"
"     > surround.vim - http://www.vim.org/scripts/script.php?script_id=1697
"       Makes it easy to work with surrounding text:
"           info -> :help surround
"
"     > snipMate.vim - http://www.vim.org/scripts/script.php?script_id=2540
"       Snippets for many languages (similar to TextMate's):
"           info -> :help snipMate
"
"     > mru.vim - http://www.vim.org/scripts/script.php?script_id=521
"       Plugin to manage Most Recently Used (MRU) files:
"           info -> :e ~/.vim_runtime/plugin/mru.vim
"
"     > Command-T - http://www.vim.org/scripts/script.php?script_id=3025
"       Command-T plug-in provides an extremely fast, intuitive mechanism for opening filesa:
"           info -> :help CommandT
"           screencast and web-help -> http://amix.dk/blog/post/19501
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"           Section: General                                            "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Not compatible to vi. Use vim advanced configuration
set nocompatible

" 指定语言
set encoding=UTF-8
set langmenu=zh_CN.UTF-8
language message zh_CN.UTF-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
set fileencoding=utf-8


" history文件中需要记录的行数
set history=1024

" 在处理未保存或只读文件的时候，弹出确认
set confirm

" 共享外部剪贴板
set clipboard+=unnamed

" 显示未完成命令
set showcmd

" 侦测文件类型
filetype on

" 设置鼠标支持
set mouse=a

" 启动的时候不显示那个援助索马里儿童的提示
set shortmess=atI

"插入模式下在哪里允许 <BS> 删除光标前面的字符。
set backspace=indent,eol,start

" Set to auto read when a file is changed from the outside
set autoread

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"           Section: Appearence                                         "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 设置显示字体
if has("win32")
    "set guifont=Courier_New:h10:cANSI
    set guifont=YaHei\ Consolas\ Hybrid:h11
    "set guifontwide=YaHei\ Consolas\ Hybrid:h12
endif

color desert      "设置颜色样式
set showmode      "模式提示 
set number        "显示行号
set ruler         "显示光标位置
set showcmd       "在 Vim 窗口右下角，标尺的右边显示未完成的命令。

" 窗口最大化
" autocmd GUIEnter * simalt ~x

" 保存窗口大小
set sessionoptions+=resize

" 隐藏掉菜单和工具条。
" set guioptions-=m
" set guioptions-=T
map <silent> <F2> :if &guioptions =~# 'T' <Bar>
        \set guioptions-=T <Bar>
        \set guioptions-=m <bar>
    \else <Bar>
        \set guioptions+=T <Bar>
        \set guioptions+=m <Bar>
    \endif<CR>

" 标签页设置
if has("gui_running")
    set showtabline=2
    map! tn tabnew
    nmap <C-c> :tabclose<CR>
endif


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"           Section: Format                                             "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 语法高亮
syntax on

" tab宽度
set tabstop=2
set cindent shiftwidth=2
set autoindent shiftwidth=2

" 自动格式化设置
filetype plugin on
filetype indent on
set autoindent
set smartindent
set expandtab     "空格取代tab
set softtabstop=2 "tab宽度

if has("autocmd")
  autocmd FileType text set textwidth=90 expandtab softtabstop=2
  autocmd FileType sh set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType php set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType html set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType javascript set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType python set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType ruby set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType eruby set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType sql set shiftwidth=2 expandtab softtabstop=2
  autocmd FileType sh     set formatoptions=croql cindent comments=b:#
  autocmd FileType c,cpp  set expandtab shiftwidth=2 softtabstop=2
endif " has("autocmd")

" 自动补齐括号
inoremap ( ()<esc>:let leavechar=")"<cr>i
inoremap [ []<esc>:let leavechar="]"<cr>i
inoremap { {<esc>o}<esc>:let leavechar="}"<cr>O
"inoremap { {}<esc>:let leavechar="}"<cr>i
inoremap ' ''<esc>:let leavechar="'"<cr>i
inoremap " ""<esc>:let leavechar='"'<cr>i
au BufNewFile,BufRead *.\(vim\)\@! inoremap " ""<esc>:let leavechar='"'<cr>i
au BufNewFile,BufRead *.\(txt\)\@! inoremap ' ''<esc>:let leavechar="'"<cr>i
imap <m-l> <esc>:exec "normal f" . leavechar<cr>a
imap <d-l> <esc>:exec "normal f" . leavechar<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"           Section: Search & Match                                     "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 高亮显示匹配的括号
set showmatch

" 匹配括号高亮的时间（单位是十分之一秒）
set matchtime=3

" 在搜索的时候忽略大小写
set ignorecase

" 高亮被搜索的句子（phrases）
set hlsearch
" 不要高亮被搜索的句子（phrases）
" set nohlsearch

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"           Section: Shortcuts                                          "
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Define map leader
let mapleader = ","
let g:mapleader = ","

map <C-n> :tabnew<CR>
map <C-c> <ESC>:x!<CR>:tabclose<CR>
map <C-q> <ESC>:q!<CR>
map <C-s> <ESC>:w<CR>

" Most Recent Update File
map <F2> <ESC>:MRU<CR> 

" NERDTree
map <F3> <ESC>:NERDTree<CR>

" CommandT
map <F4> <ESC>:CommandT<CR>

map <F5> :tabpreviou<CR>  "上一个标签页
map <F6> :tabnext<CR>     "下一个标签页

nmap <leader>n :tabnew<SPACE> 
nnoremap <leader>w :w!<CR> "Fast saving
nnoremap <leader>x :x!<CR> "Fast close
" Edit vimrc
nmap <leader>e :tabnew ~/.vimrc<CR> "编辑_vimrc
" 保存.vimrc文件后会自动调用新的.vimrc
autocmd! bufwritepost .vimrc source ~/.vimrc

" Ctrl-a begin of line
map <C-a> ^
imap <C-a> <ESC>I
" Ctrl-e end of line
map <C-e> $
imap <C-e> <esc>$i

" Make long line navigation easily
noremap j gj
noremap k gk
noremap <UP> gk
noremap <DOWN> gj
inoremap <UP> <ESC>gki
inoremap <DOWN> <ESC>gji

" Underline the text
map underline yypVr=o

" Format the whole article
map format 1gpG<CR>

" Timestamp
map date !!date<CR>
